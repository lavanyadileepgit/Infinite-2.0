//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trainreservationsys
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class train_reservationEntities : DbContext
    {
        public train_reservationEntities()
            : base("name=train_reservationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<cancelticket> canceltickets { get; set; }
        public virtual DbSet<Train> Trains { get; set; }
        public virtual DbSet<BookedTicket> BookedTickets { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<AddTrainBasedOnStatus_Result> AddTrainBasedOnStatus(string trainName, string departurestation, string arrivalstation, string firstclass, string secondclass, string sleeperclass, Nullable<int> totalberths, Nullable<int> availableberths, string tStatus)
        {
            var trainNameParameter = trainName != null ?
                new ObjectParameter("TrainName", trainName) :
                new ObjectParameter("TrainName", typeof(string));
    
            var departurestationParameter = departurestation != null ?
                new ObjectParameter("Departurestation", departurestation) :
                new ObjectParameter("Departurestation", typeof(string));
    
            var arrivalstationParameter = arrivalstation != null ?
                new ObjectParameter("arrivalstation", arrivalstation) :
                new ObjectParameter("arrivalstation", typeof(string));
    
            var firstclassParameter = firstclass != null ?
                new ObjectParameter("firstclass", firstclass) :
                new ObjectParameter("firstclass", typeof(string));
    
            var secondclassParameter = secondclass != null ?
                new ObjectParameter("secondclass", secondclass) :
                new ObjectParameter("secondclass", typeof(string));
    
            var sleeperclassParameter = sleeperclass != null ?
                new ObjectParameter("sleeperclass", sleeperclass) :
                new ObjectParameter("sleeperclass", typeof(string));
    
            var totalberthsParameter = totalberths.HasValue ?
                new ObjectParameter("totalberths", totalberths) :
                new ObjectParameter("totalberths", typeof(int));
    
            var availableberthsParameter = availableberths.HasValue ?
                new ObjectParameter("availableberths", availableberths) :
                new ObjectParameter("availableberths", typeof(int));
    
            var tStatusParameter = tStatus != null ?
                new ObjectParameter("TStatus", tStatus) :
                new ObjectParameter("TStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddTrainBasedOnStatus_Result>("AddTrainBasedOnStatus", trainNameParameter, departurestationParameter, arrivalstationParameter, firstclassParameter, secondclassParameter, sleeperclassParameter, totalberthsParameter, availableberthsParameter, tStatusParameter);
        }
    
        public virtual int AddUser(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> AdminLoginProcedure(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AdminLoginProcedure", usernameParameter, passwordParameter);
        }
    
        public virtual int BookTicket(Nullable<int> trainId, Nullable<int> userId, string trainname, Nullable<System.DateTime> bookingDate, Nullable<int> numberOfTickets, string @class)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("TrainId", trainId) :
                new ObjectParameter("TrainId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var trainnameParameter = trainname != null ?
                new ObjectParameter("trainname", trainname) :
                new ObjectParameter("trainname", typeof(string));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var numberOfTicketsParameter = numberOfTickets.HasValue ?
                new ObjectParameter("NumberOfTickets", numberOfTickets) :
                new ObjectParameter("NumberOfTickets", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookTicket", trainIdParameter, userIdParameter, trainnameParameter, bookingDateParameter, numberOfTicketsParameter, classParameter);
        }
    
        public virtual int BookTickets(Nullable<int> trainId, Nullable<int> userId, string trainname, Nullable<System.DateTime> bookingDate, Nullable<int> numberOfTickets, string @class)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("TrainId", trainId) :
                new ObjectParameter("TrainId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var trainnameParameter = trainname != null ?
                new ObjectParameter("trainname", trainname) :
                new ObjectParameter("trainname", typeof(string));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var numberOfTicketsParameter = numberOfTickets.HasValue ?
                new ObjectParameter("NumberOfTickets", numberOfTickets) :
                new ObjectParameter("NumberOfTickets", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookTickets", trainIdParameter, userIdParameter, trainnameParameter, bookingDateParameter, numberOfTicketsParameter, classParameter);
        }
    
        public virtual int BookTrainTicket(Nullable<int> trainId, string @class, string tname, Nullable<int> userId, Nullable<System.DateTime> bookingDate, Nullable<int> numberOfTickets)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("TrainId", trainId) :
                new ObjectParameter("TrainId", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var tnameParameter = tname != null ?
                new ObjectParameter("Tname", tname) :
                new ObjectParameter("Tname", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var numberOfTicketsParameter = numberOfTickets.HasValue ?
                new ObjectParameter("NumberOfTickets", numberOfTickets) :
                new ObjectParameter("NumberOfTickets", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookTrainTicket", trainIdParameter, classParameter, tnameParameter, userIdParameter, bookingDateParameter, numberOfTicketsParameter);
        }
    
        public virtual int BookTrainTickets(Nullable<int> trainId, Nullable<int> userId, string trainName, Nullable<System.DateTime> bookingDate, Nullable<int> numberOfTickets, string @class, ObjectParameter bookingId)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("TrainId", trainId) :
                new ObjectParameter("TrainId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var trainNameParameter = trainName != null ?
                new ObjectParameter("TrainName", trainName) :
                new ObjectParameter("TrainName", typeof(string));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var numberOfTicketsParameter = numberOfTickets.HasValue ?
                new ObjectParameter("NumberOfTickets", numberOfTickets) :
                new ObjectParameter("NumberOfTickets", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookTrainTickets", trainIdParameter, userIdParameter, trainNameParameter, bookingDateParameter, numberOfTicketsParameter, classParameter, bookingId);
        }
    
        public virtual int Cancel(Nullable<int> bookingId, Nullable<int> userId)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("BookingId", bookingId) :
                new ObjectParameter("BookingId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Cancel", bookingIdParameter, userIdParameter);
        }
    
        public virtual int DeleteTrain(Nullable<int> trainId)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("TrainId", trainId) :
                new ObjectParameter("TrainId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTrain", trainIdParameter);
        }
    
        public virtual int deleteuser(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteuser", useridParameter);
        }
    
        public virtual ObjectResult<PrintTicket_Result> PrintTicket(Nullable<int> bookingId)
        {
            var bookingIdParameter = bookingId.HasValue ?
                new ObjectParameter("bookingId", bookingId) :
                new ObjectParameter("bookingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrintTicket_Result>("PrintTicket", bookingIdParameter);
        }
    
        public virtual int UpdateTrainStatus(Nullable<int> trainId, string trainStatus)
        {
            var trainIdParameter = trainId.HasValue ?
                new ObjectParameter("TrainId", trainId) :
                new ObjectParameter("TrainId", typeof(int));
    
            var trainStatusParameter = trainStatus != null ?
                new ObjectParameter("TrainStatus", trainStatus) :
                new ObjectParameter("TrainStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTrainStatus", trainIdParameter, trainStatusParameter);
        }
    
        public virtual ObjectResult<UserLoginProcedure_Result> UserLoginProcedure(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLoginProcedure_Result>("UserLoginProcedure", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<ViewTrain_Result> ViewTrain()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewTrain_Result>("ViewTrain");
        }
    }
}
